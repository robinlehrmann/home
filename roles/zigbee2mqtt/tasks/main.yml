---
- name: ensure rsync and make exists
  package:
    name:
      - rsync
      - make
      - g++
    state: present

- name: create zigbee2mqtt user
  user:
    name: "{{ zigbee2mqtt_user }}"
    groups: dialout

- name: ensure correct version is present
  lineinfile:
    path: "{{ zigbee2mqtt_project_path }}/current/package.json"
    regexp: '^  \"version\": \"{{ zigbee2mqtt_version }}\"'
    state: absent
  check_mode: yes
  changed_when: false
  register: version

- include_tasks: deploy.yml
  when: not version.found is defined or not version.found

- name: ensure systemd zigbee2mqtt service exists
  template:
    src: zigbee2mqtt.service.j2
    dest: /usr/lib/systemd/system/zigbee2mqtt.service
  notify:
    - restart zigbee2mqtt

- name: daemon reload for zigbee2mqtt.service
  systemd:
    daemon_reload: yes
  notify:
    - restart zigbee2mqtt

- include_tasks: deploy.yml

- name: check if zigbee2mqtt configuration.yaml exists
  stat:
    path: "{{ zigbee2mqtt_project_path }}/shared/data/configuration.yaml"
  register: configuration

- name: ensure log directory exists and is writeable
  file:
    path: "{{ zigbee2mqtt_log_path }}"
    state: directory
    owner: "{{ zigbee2mqtt_user }}"

- name: ensure zigbee2mqtt configuration.yaml exists
  template:
    src: "configuration.yaml.j2"
    dest: "{{ zigbee2mqtt_project_path }}/shared/data/configuration.yaml"
    owner: "{{ zigbee2mqtt_user }}"
  when: not configuration.stat.exists
  notify:
    - restart zigbee2mqtt

- name: ensure project directory is writeable
  file:
    path: "{{ zigbee2mqtt_project_path }}"
    state: directory
    owner: "{{ zigbee2mqtt_user }}"
    group: "{{ zigbee2mqtt_user }}"
    recurse: yes

- name: start and enable zigbee2mqtt service.
  systemd:
    name: zigbee2mqtt
    enabled: true
  notify:
    - restart zigbee2mqtt
